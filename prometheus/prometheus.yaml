---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: mw
  namespace: metrics
  labels:
    prometheus: mw
spec:
  podMetadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
  replicas: 1
  retention: 180d
  scrapeInterval: 10s
  evaluationInterval: 30s
  serviceAccountName: prometheus
  priorityClassName: has-volume-constraints
  # target Selectors with matchLabels.prometheus-namespace: ''
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector: {}
  podMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  ruleNamespaceSelector: {}
  ruleSelector: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: prometheus
              operator: In
              values:
              - mw
          topologyKey: "kubernetes.io/hostname"
        weight: 100
  storage:
    volumeClaimTemplate:
      metadata:
        name: prometheus-storage
        labels:
          prometheus: mw
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard
        resources:
          requests:
            storage: 20Gi
  resources:
    limits:
      memory: 2Gi
    requests:
      cpu: 50m
      memory: 250Mi
  securityContext:
    fsGroup: 2000
    runAsUser: 1000
    runAsNonRoot: true
  alerting:
    alertmanagers:
      - namespace: metrics
        name: alertmanager-mw
        port: web
  baseImage: quay.io/prometheus/prometheus
  version: v2.55.1
  nodeSelector:
    cloud.google.com/gke-spot: "true"
  tolerations:
  - effect: NoSchedule
    key: cloud.google.com/gke-spot
    operator: Equal
    value: "true"