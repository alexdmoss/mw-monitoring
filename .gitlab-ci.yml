stages:
- deploy


variables:
  DOMAIN: grafana.alexos.dev
  GRAFANA_PASS: ${GRAFANA_PASSWORD}
  GRAFANA_OPERATOR_VERSION: v5.12.0
  GOOGLE_CREDENTIALS: "${APP_CI_CREDENTIALS}"

.deploy:
  only:
    - master
  image: al3xos/ci-tools:latest
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - region=$(gcloud container clusters list --project=${GCP_PROJECT_ID} --filter "NAME=${CLUSTER_NAME}" --format "value(zone)")
  - gcloud container clusters get-credentials ${CLUSTER_NAME} --project=${GCP_PROJECT_ID} --region=${region}

deploy-prometheus:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh prometheus

deploy-grafana-operator:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh grafana-operator

deploy-grafana:
  stage: deploy
  extends: .deploy
  needs:
  - deploy-grafana-operator
  script:
    - ./deploy.sh grafana

### disabled as standing cost is >Â£1 per day without even doing much with it
# deploy-gmp:
#   stage: deploy
#   extends: .deploy
#   script:
#     - ./deploy.sh gmp

deploy-collectors:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh collectors

deploy-alertmanager:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh alertmanager

test-alerts:
  stage: deploy
  image:
    name: prom/prometheus
    entrypoint: [ "/bin/sh", "-c" ]
  script:
  - cd alerts/ && ./test-alerts.sh

deploy-alerts:
  stage: deploy
  extends: .deploy
  needs: 
    - test-alerts
  script:
    - ./deploy.sh alerts

deploy-service-monitors:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh service-monitors

build-webhook:
  stage: deploy
  only:
  - master
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    GOOGLE_APPLICATION_CREDENTIALS: ${CI_PROJECT_DIR}/kaniko.json
    IMAGE_NAME: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alertmanager-test-webhook:main
  before_script:
  - mkdir -p /kaniko/.docker
  - echo "${GOOGLE_CREDENTIALS}" > ${CI_PROJECT_DIR}/kaniko.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/test-webhook"
      --compressed-caching=false
      --snapshot-mode=redo
      --use-new-run
      --dockerfile "${CI_PROJECT_DIR}/test-webhook/Dockerfile"
      --destination "${IMAGE_NAME}"
  after_script:
  - rm -f ${CI_PROJECT_DIR}/kaniko.json

deploy-webhook:
  stage: deploy
  extends: .deploy
  needs:
  - build-webhook
  script:
    - ./deploy.sh webhook