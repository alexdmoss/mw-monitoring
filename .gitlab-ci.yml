stages:
- build-and-test
- deploy


variables:
  DOMAIN: grafana.alexos.dev
  GRAFANA_PASS: ${GRAFANA_PASSWORD}
  GRAFANA_OPERATOR_VERSION: v5.12.0
  GOOGLE_CREDENTIALS: "${APP_CI_CREDENTIALS}"

.deploy:
  only:
    - main
  image: al3xos/ci-tools:latest
  before_script:
  - echo "${GOOGLE_CREDENTIALS}" | gcloud auth activate-service-account --key-file -
  - region=$(gcloud container clusters list --project=${GCP_PROJECT_ID} --filter "NAME=${CLUSTER_NAME}" --format "value(zone)")
  - gcloud container clusters get-credentials ${CLUSTER_NAME} --project=${GCP_PROJECT_ID} --region=${region}


include:
  - component: gitlab.com/alexos-dev/gitlab-ci-components/buildkit@~latest
    inputs:
      job-stage: build-and-test
      job-suffix: test-webhook
      image-name: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alertmanager-test-webhook
      dockerfile: webhook.Dockerfile
  # security scans
  - component: gitlab.com/alexos-dev/gitlab-ci-components/security-scan@~latest
    inputs:
      job-stage: build-and-test
      job-needs: ["buildkit-build-test-webhook"]
      image-names: europe-docker.pkg.dev/${GCP_PROJECT_ID}/alexos/alertmanager-test-webhook:latest
      dockerfiles: webhook.Dockerfile
      skip-image-tag: "true"
      snyk-language: go
      snyk-library: all

sonarcloud-check:
  stage: build-and-test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - main
  allow_failure: true

deploy-prometheus:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh prometheus

deploy-grafana-operator:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh grafana-operator

deploy-grafana:
  stage: deploy
  extends: .deploy
  needs:
  - deploy-grafana-operator
  script:
    - ./deploy.sh grafana

### disabled as standing cost is >Â£1 per day without even doing much with it
# deploy-gmp:
#   stage: deploy
#   extends: .deploy
#   script:
#     - ./deploy.sh gmp

deploy-collectors:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh collectors

deploy-alertmanager:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh alertmanager

test-alerts:
  stage: build-and-test
  image:
    name: prom/prometheus
    entrypoint: [ "/bin/sh", "-c" ]
  script:
  - cd alerts/ && ./test-alerts.sh

deploy-alerts:
  stage: deploy
  extends: .deploy
  needs: 
    - test-alerts
  script:
    - ./deploy.sh alerts

deploy-service-monitors:
  stage: deploy
  extends: .deploy
  script:
    - ./deploy.sh service-monitors

deploy-webhook:
  stage: deploy
  extends: .deploy
  needs:
  - buildkit-build-test-webhook
  script:
    - ./deploy.sh webhook
