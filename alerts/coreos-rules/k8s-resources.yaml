groups:
  - name: kubernetes-resources
    rules:
      - alert: KubeCPUOvercommit
        labels:
          group: mw-monitoring
          receiver: default
          severity: low
        annotations:
          dashboard: /d/not-implemented
          summary: Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.
        expr: |
          sum(namespace:kube_pod_container_resource_requests_cpu_cores:sum)
            /
          sum(kube_node_status_allocatable_cpu_cores)
            >
          (count(kube_node_status_allocatable_cpu_cores)-1) / count(kube_node_status_allocatable_cpu_cores)
        for: 5m
      - alert: KubeMemOvercommit
        labels:
          group: mw-monitoring
          receiver: default
          severity: low
        annotations:
          dashboard: /d/not-implemented
          summary: Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.
        expr: |
          sum(namespace:kube_pod_container_resource_requests_memory_bytes:sum)
            /
          sum(kube_node_status_allocatable_memory_bytes)
            >
          (count(kube_node_status_allocatable_memory_bytes)-1)
            /
          count(kube_node_status_allocatable_memory_bytes)
        for: 5m
      - alert: CPUThrottlingHigh
        labels:
          group: mw-monitoring
          receiver: default
          severity: low
        annotations:
          dashboard: /d/not-implemented
          summary:
            '{{ printf "%0.0f" $value }}% throttling of CPU in namespace {{ $labels.namespace
            }} for container {{ $labels.container }} in pod {{ $labels.pod }}.'
        expr:
          "100 * sum(increase(container_cpu_cfs_throttled_periods_total{container!=\"\",
          }[5m])) by (container, pod, namespace)\n  /\nsum(increase(container_cpu_cfs_periods_total{}[5m]))
          by (container, pod, namespace)\n  > 25 \n"
        for: 15m
